services:
  app:
    build:
      context: .
    container_name: goxcrap
    command: ["/goxcrap", "--prod"]
    ports:
      - "${SCRAPPER_EXPOSED_PORT}:${SCRAPPER_INTERNAL_PORT}"
    environment:
      API_PORT: ${SCRAPPER_INTERNAL_PORT:-3001}
      EMAIL: ${SCRAPPER_EMAIL}
      PASSWORD: ${SCRAPPER_PASSWORD}
      USERNAME: ${SCRAPPER_USERNAME}
      DRIVER_PATH: ${SELENIUM_DRIVER_PATH}
      BROWSER_PATH: ${SELENIUM_BROWSER_PATH}
      BROKER_CONCURRENT_MESSAGES: ${BROKER_CONCURRENT_MESSAGES}
      LOGIN_PAGE_TIMEOUT: ${SCRAPPER_LOGIN_PAGE_TIMEOUT}
      LOGIN_ELEMENTS_TIMEOUT: ${SCRAPPER_LOGIN_ELEMENTS_TIMEOUT}
      LOGIN_PASSWORD_TIMEOUT: ${SCRAPPER_LOGIN_PASSWORD_TIMEOUT}
      SEARCH_PAGE_TIMEOUT: ${SCRAPPER_SEARCH_PAGE_TIMEOUT}
      ARTICLES_TIMEOUT: ${SCRAPPER_ARTICLES_TIMEOUT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'curl -sSf http://localhost:${SCRAPPER_INTERNAL_PORT}/ping/v1 || exit 1'" ]
      interval: 5s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: rabbitmq
    hostname: 'goxcrap'
    ports:
      - "5672:${RABBITMQ_PORT:-5672}"
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms" ]
      start_period: 1m
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  rabbitmq_data:

networks:
  app:
    driver: bridge