services:
  app:
    build:
      context: .
    container_name: goxcrap
    environment:
      EMAIL: ${EMAIL}
      PASSWORD: ${PASSWORD}
      USERNAME: ${USERNAME}
      DRIVER_PATH: ${DRIVER_PATH}
      BROWSER_PATH: ${BROWSER_PATH}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
    command: ["/goxcrap", "--prod"]
    ports:
      - 8080:8091
    restart: on-failure
    volumes:
      - .:/app
    networks:
      - app
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'curl -sSf http://localhost:8091/ping/v1 || exit 1'" ]
      interval: 5s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: rabbitmq
    hostname: 'goxcrap'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms" ]
      start_period: 1m
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app

volumes:
  rabbitmq_data:

networks:
  app:
    driver: bridge